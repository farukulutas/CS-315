%option noyywrap


DELETE_CALL	delete
PRINT_CALL	print
INPUT_CALL	input
FILE_INPUT_CALL	file_input
SET_INPUT_CALL	set_input
INSERT_CALL	insert
REMOVE_CALL	remove
UNION_CALL	union
INTERSECT_CALL	intersect
CARTESIAN_CALL	cartesian
DIFF_CALL	diff
SUBSET_CALL	subsetof
PROPERSUBSET_CALL	properSubsetof
SUPERSET_CALL	supersetof
CONTAINS_CALL	contains
ISEMPY_CALL	isempty
EQUALS_CALL	equals
FILE_OUT_CALL	file_output
CARDINALITY_CALL	cardinality

MAIN	main
ENDMAIN	endmain
IF	if
ELSEIF	elseif
ELSE	else
ENDIF	endif
WHILE	while
ENDWHILE	endwhile
DO	do
FOR	for
ENDFOR	endfor
FOREACH	foreach
FUNC	func
ENDFUNC	endfunc
RETURN	return

UNDERSCORE	_
COMMA	,
SEMICOLON	;
COLON	:
LP	\(
RP	\)
LCURLY	\{
RCURLY	\}
PLUS	\+
MINUS	-
STAR	\*
SLASH	\/
PERCENT	%
DOUBLESLASH	\/\/
DOUBLESTAR	\*\*
DOT	\.
EQ	\=
LESS	<
GREATER	>
LEQ	<=
GEQ	>=
APOST	'
SYMBOL	\+|\-|_|,|;|:|\(|\)|\{|\}|\*|\/|%|\.|\=|<|>|'|@
GENERIC	G

DIGIT	[0-9]
SIGN	[+-]
ALPHA	[a-zA-z]
SPACE	[ \t]*
ALPHANUM	DIGIT|ALPHA

CHAR	ALPHANUM|SYMBOL
WORD	({ALPHA}|{DIGIT}|{SYMBOL})*
INT	{SIGN}?{DIGIT}+
FLOAT	{SIGN}?({DIGIT}*\.{DIGIT}+|{DIGIT}+\.{DIGIT}*)
VARID	{ALPHA}({ALPHA}|{DIGIT}|_)*
SETID	@{VARID}
TRUE	TRUE
FALSE	FALSE
INT_TYPE	int
FLOAT_TYPE	float
BOOL_TYPE	bool
CHAR_TYPE	char
STRING_TYPE	string
SET_TYPE	set
NOT	NOT
AND	AND
OR	OR
XOR	XOR
IFF	IFF
IMP	IMP
ASSIGNOP	<<

COMMENT {DOUBLESLASH}({WORD}|{SPACE})*
STRING	{APOST}({WORD}|{SPACE})*{APOST}

IMPORTS imports

%%
{IMPORTS}	return IMPORTS;
\n		yylineno++;

{RETURN}	return RETURN;

{DELETE_CALL}	return DELETE_CALL;
{PRINT_CALL}	return PRINT_CALL;
{INPUT_CALL}	return INPUT_CALL;
{FILE_INPUT_CALL}	return FILE_INPUT_CALL;
{SET_INPUT_CALL}	return SET_INPUT_CALL;
{INSERT_CALL}	return INSERT_CALL ;
{REMOVE_CALL}	return REMOVE_CALL ;
{UNION_CALL}	return UNION_CALL ;
{INTERSECT_CALL}	return INTERSECT_CALL;
{CARTESIAN_CALL}	return CARTESIAN_CALL;
{DIFF_CALL}	return DIFF_CALL;
{SUBSET_CALL}	return SUBSETOF_CALL;
{PROPERSUBSET_CALL}	return PROPERSUBSETOF_CALL;
{SUPERSET_CALL}	return SUPERSETOF_CALL;
{CONTAINS_CALL}	return CONTAINS_CALL;
{ISEMPY_CALL}	return ISEMPTY_CALL;
{EQUALS_CALL}	return EQUALS_CALL;
{FILE_OUT_CALL}	return FILE_OUTPUT_CALL;
{CARDINALITY_CALL}	return CARDINALITY_CALL;

{MAIN}	return MAIN;
{ENDMAIN}	return ENDMAIN;
{IF}	return IF;
{ELSEIF}	return ELSEIF;
{ELSE}	return ELSE;
{ENDIF}	return ENDIF;
{WHILE}	return WHILE;
{ENDWHILE}	return ENDWHILE;
{DO}	return DO;
{FOR}	return FOR;
{ENDFOR}	return ENDFOR;
{FOREACH}	return FOREACH;
{FUNC}	return FUNC;
{ENDFUNC}	return ENDFUNC;

{GENERIC}	return GENERIC;
{INT_TYPE}	return INT_TYPE;
{FLOAT_TYPE}	return FLOAT_TYPE;
{BOOL_TYPE}	return BOOL_TYPE;
{CHAR_TYPE}	return CHAR_TYPE;
{STRING_TYPE}	return STRING_TYPE;
{SET_TYPE}	return SET_TYPE;

{NOT}	return NOT;
{AND}	return AND;
{OR}	return OR;
{XOR}	return XOR;
{IFF}	return IFF;
{IMP}	return IMP;
{ASSIGNOP}	return ASSIGNOP;

{COMMA}	return COMMA;
{DOT}	return DOT;
{SEMICOLON}	return SEMICOLON;
{COLON}	return COLON;
{LP}	return LP;
{RP}	return RP;
{LCURLY}	return LCURLY;
{RCURLY}	return RCURLY;
{PLUS}	return PLUS;
{MINUS}	return MINUS;
{STAR}	return STAR;
{SLASH}	return SLASH;
{PERCENT}	return PERCENT;
{DOUBLESTAR}	return DOUBLESTAR;
{EQ}	return EQ;
{LESS}	return LESS;
{GREATER}	return GREATER;
{LEQ}	return LEQ;
{GEQ}	return GEQ;

{INT}	return INT;
{FLOAT}	return FLOAT;
{TRUE}	return TRUE;
{FALSE}	return FALSE;
{VARID}	return VARID;
{SETID}	return SETID;

{STRING}	return STRING;
{COMMENT}	return COMMENT;

{SPACE}	;

%%

